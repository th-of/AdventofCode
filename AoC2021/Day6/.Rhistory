2*2
source("~/AoC/AoC2015/Day4/Part2.R")
grep("^000000", tab$Hashes)
View(tab)
tab <- as.data.frame(1:9999999)
tab$New <- paste0(input, tab[,1])
tab$Hashes <- md5(tab$New)
grep("^000000", tab$Hashes)
tab[3938038]
tab[3938038,]
source("~/AoC/AoC2015/Day7/Part2.R")
input <- readLines("input.txt")
numbers <- as.numeric(unlist(strsplit(input, ",")))
input <- readLines("input.txt")
setwd("/Users/thomas/AoC/AoC2021/Day6")
input <- readLines("input.txt")
numbers <- as.numeric(unlist(strsplit(input, ",")))
#print(numbers)
# Faster implementation:
days <- 256
for (a in 1:days){
numbers[which(numbers >= 0)] <- numbers[which(numbers >= 0)] - 1
numbers <- c(numbers, rep(8, sum(numbers < 0)))
numbers[which(numbers < 0)] <- 6
print(a)
}
input <- readLines("input.txt")
numbers <- as.numeric(unlist(strsplit(input, ",")))
for (n in 1:256){
for (i in 1:length(numbers)){
if (numbers[i] >= 0){
numbers[i] <- numbers[i] - 1
}
if (numbers[i] < 0){
numbers[i] <- 6
numbers[length(numbers)+1] <- 8
}
}
print(paste("Day:", n, "Answer:", length(numbers)))
}
install.packages("disk.frame")
# Day 6, part 2
library("disk.frame")
?disk.frame
setup_disk.frame()
options(future.globals.maxSize = Inf)
numbers <- as.disk.frame(as.numeric(unlist(strsplit(input, ","))))
input <- readLines("input2.txt")
numbers <- as.disk.frame(as.numeric(unlist(strsplit(input, ","))))
numbers <- as.numeric(unlist(strsplit(input, ",")))
typeof(numbers)
numbers <- as.data.frame(numbers)
View(numbers)
?as.data.frame
for (n in 1:18){
for (i in 1:length(numbers)){
if (numbers[i] >= 0){
numbers[i] <- numbers[i] - 1
}
if (numbers[i] < 0){
numbers[i] <- 6
numbers[length(numbers)+1] <- 8
}
}
#print(paste("Day:", n, "Answer:", length(numbers)))
}
answer <- length(numbers)
print(answer)
View(numbers)
BiocManager::install("DelayedArray")
install.packages("BiocManager")
BiocManager::install("DelayedArray")
# Day 6, part 2
library(DelayedArray)
install.packages("Matrix")
# Day 6, part 2
library(DelayedArray)
help("DelayedArray")
input <- readLines("input2.txt")
numbers <- as.numeric(unlist(strsplit(input, ",")))
numbers <- DelayedArray(numbers)
input <- readLines("input2.txt")
numbers <- array(as.numeric(unlist(strsplit(input, ","))), dim=1)
numbers <- array(as.numeric(unlist(strsplit(input, ","))), dim=5)
numbers <- DelayedArray(numbers)
for (n in 1:18){
for (i in 1:length(numbers)){
if (numbers[i] >= 0){
numbers[i] <- numbers[i] - 1
}
if (numbers[i] < 0){
numbers[i] <- 6
numbers[length(numbers)+1] <- 8
}
}
#print(paste("Day:", n, "Answer:", length(numbers)))
}
View(numbers)
numbers <- array(as.numeric(unlist(strsplit(input, ","))), dim=50)
numbers <- DelayedArray(numbers)
for (n in 1:18){
for (i in 1:length(numbers)){
if (numbers[i] >= 0){
numbers[i] <- numbers[i] - 1
}
if (numbers[i] < 0){
numbers[i] <- 6
numbers[length(numbers)+1] <- 8
}
}
#print(paste("Day:", n, "Answer:", length(numbers)))
}
answer <- length(numbers)
print(answer)
numbers
install.packages("ff")
# Day 6, part 2
library(ff)
numbers <- as.numeric(unlist(strsplit(input, ",")))
numbers <- as.ff(numbers)
View(numbers)
for (n in 1:18){
for (i in 1:length(numbers)){
if (numbers[i] >= 0){
numbers[i] <- numbers[i] - 1
}
if (numbers[i] < 0){
numbers[i] <- 6
numbers[length(numbers)+1] <- 8
}
}
#print(paste("Day:", n, "Answer:", length(numbers)))
}
answer <- length(numbers)
print(answer)
numbers
numbers[2]
numbers
rbind(numbers, 4)
rbind(numbers, c(4))
numbers
c(numbers, 2)
ffappend(numbers, 4)
crbind(numbers, 4)
install.packages("RSQLite")
library(RSQLite)
con <- dbConnect(SQLite(), dbname = "AoC")
dbGetQuery(con, "select 1 + 1")
memory.limit()
rowSums()
input <- readLines("input.txt")
numbers <- as.numeric(unlist(strsplit(input, ",")))
rowSums(numbers)
colSums(numbers)
source("~/AoC/AoC2021/Day6/Part2_Day6.R")
gc()
source("~/AoC/AoC2021/Day6/Part2_Day6.R")
source("~/AoC/AoC2021/Day6/Part2_Day6.R")
numbers
answers
out <- cbind(day, answers)
View(out)
write.csv(out, row.names = TRUE)
?write.csv
write.table(out, file = "answers.csv")
write.csv(out, file = "answers.csv", row.names = TRUE)
out2 <- c("Days" = day, "Answer" = answers)
out2
out2 <- as.data.frame("Days" = day, "Answer" = answers)
## Input data parsing:
numbers <- rep(NA, 2*10**12)
Sys.setenv('R_MAX_VSIZE'=32000000000)
## Input data parsing:
numbers <- rep(NA, 2*10**12)
source("~/AoC/AoC2021/Day6/Part2_Day6.R")
source("~/AoC/AoC2021/Day6/Part2_Day6.R")
answer <- length(numbers)
print(answer)
out <- cbind(day, answers)
write.csv(out, "test2.csv", row.names = TRUE)
